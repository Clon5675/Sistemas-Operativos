#include <linux/kernel.h>
#include <linux/syscalls.h>

SYSCALL_DEFINE1(problema1, const char __user *, expresion_usuario) {
    char stack[1024];
    int top = -1;
    long copied;
    char c;
    int i = 0;

    while ((copied = strncpy_from_user(stack + i, expresion_usuario + i, 1)) != 0 && i < 1023) {
        if (copied < 0) {
            return -EFAULT;
        }
        c = stack[i++];
        if (c == '(' || c == '[') {
            if (top >= 1023) {
                printk(KERN_ALERT "Stack overflow\n");
                return -1; 
            }
            stack[++top] = c;
        } else if (c == ')' || c == ']') {
            if (top == -1) {
                return 0;
            }
            char topChar = stack[top--];
            if ((c == ')' && topChar != '(') || (c == ']' && topChar != '[')) {
                return 0; 
            }
        }
    }
    stack[i] = '\0'; 

    return (top == -1) ? 1 : 0;
}
